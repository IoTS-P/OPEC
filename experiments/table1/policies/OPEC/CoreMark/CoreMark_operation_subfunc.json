{
    "Actual_Benchmark": [
        "core_list_mergesort",
        "core_bench_matrix",
        "crc16",
        "iterate",
        "core_list_remove",
        "matrix_mul_vect",
        "crcu16",
        "core_bench_state",
        "core_list_reverse",
        "crcu32",
        "crcu8",
        "matrix_add_const",
        "core_list_find",
        "cmp_complex",
        "start_time",
        "cmp_idx",
        "get_time",
        "core_state_transition",
        "matrix_mul_matrix_bitextract",
        "calc_func",
        "core_bench_list",
        "matrix_sum",
        "HAL_GetTick",
        "matrix_test",
        "stop_time",
        "core_list_undo_remove",
        "matrix_mul_const",
        "ee_isdigit",
        "matrix_mul_matrix"
    ],
    "Call_Init": [
        "core_list_mergesort",
        "core_bench_matrix",
        "crc16",
        "copy_info",
        "matrix_mul_vect",
        "crcu16",
        "core_bench_state",
        "crcu32",
        "crcu8",
        "core_list_insert_new",
        "matrix_add_const",
        "cmp_complex",
        "cmp_idx",
        "core_state_transition",
        "matrix_mul_matrix_bitextract",
        "calc_func",
        "core_init_matrix",
        "matrix_sum",
        "matrix_test",
        "core_init_state",
        "matrix_mul_const",
        "core_list_init",
        "ee_isdigit",
        "matrix_mul_matrix"
    ],
    "Data_Init": [],
    "Determine_Interation": [
        "core_list_mergesort",
        "core_bench_matrix",
        "crc16",
        "iterate",
        "core_list_remove",
        "matrix_mul_vect",
        "crcu16",
        "core_bench_state",
        "core_list_reverse",
        "crcu32",
        "crcu8",
        "matrix_add_const",
        "core_list_find",
        "cmp_complex",
        "start_time",
        "cmp_idx",
        "get_time",
        "core_state_transition",
        "time_in_secs",
        "matrix_mul_matrix_bitextract",
        "calc_func",
        "core_bench_list",
        "matrix_sum",
        "HAL_GetTick",
        "matrix_test",
        "stop_time",
        "core_list_undo_remove",
        "matrix_mul_const",
        "ee_isdigit",
        "matrix_mul_matrix"
    ],
    "Get_Function": [
        "crcu16",
        "uart_send_char",
        "number",
        "Error_Handler",
        "BSP_LED_On",
        "eaddr",
        "check_data_types",
        "iaddr",
        "crc16",
        "strnlen",
        "HAL_UART_Transmit",
        "crcu8",
        "HAL_UART_GetState",
        "HAL_GetTick",
        "ee_printf",
        "ee_vsprintf",
        "skip_atoi",
        "HAL_GPIO_WritePin",
        "print",
        "UART_WaitOnFlagUntilTimeout"
    ],
    "Program_Finish": [
        "portable_fini"
    ],
    "Program_Start": [
        "HAL_Init",
        "__NVIC_SetPriorityGrouping",
        "HAL_NVIC_SetPriority",
        "HAL_RCC_ClockConfig",
        "__NVIC_SetPriority",
        "SystemClock_Config",
        "HAL_NVIC_SetPriorityGrouping",
        "HAL_RCC_GetHCLKFreq",
        "HAL_UART_MspInit",
        "HAL_SYSTICK_Config",
        "BSP_LED_On",
        "__NVIC_GetPriorityGrouping",
        "HAL_NVIC_EnableIRQ",
        "HAL_RCC_GetPCLK1Freq",
        "SysTick_Config",
        "HAL_RCC_OscConfig",
        "__NVIC_EnableIRQ",
        "HAL_RCC_GetPCLK2Freq",
        "portable_init",
        "UART_SetConfig",
        "HAL_UART_Init",
        "HAL_PWREx_EnableOverDrive",
        "HAL_GetTick",
        "HAL_RCC_GetSysClockFreq",
        "Program_Init",
        "HAL_InitTick",
        "Error_Handler",
        "BSP_LED_Init",
        "HAL_MspInit",
        "HAL_GPIO_WritePin",
        "NVIC_EncodePriority",
        "HAL_GPIO_Init"
    ],
    "Report_Results": [
        "uart_send_char",
        "number",
        "Error_Handler",
        "BSP_LED_On",
        "eaddr",
        "iaddr",
        "HAL_UART_GetState",
        "strnlen",
        "HAL_UART_Transmit",
        "HAL_GetTick",
        "ee_printf",
        "time_in_secs",
        "ee_vsprintf",
        "skip_atoi",
        "HAL_GPIO_WritePin",
        "print",
        "UART_WaitOnFlagUntilTimeout"
    ],
    "Seeds_Init": [
        "get_seed_32"
    ]
}